# Generated by Django 5.1.4 on 2025-07-19 19:42

import django.core.validators
import django.db.models.deletion
import placements.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('logo', models.ImageField(blank=True, null=True, upload_to=placements.models.company_logo_upload_path)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('company_size', models.CharField(blank=True, choices=[('startup', 'Startup (1-50)'), ('small', 'Small (51-200)'), ('medium', 'Medium (201-1000)'), ('large', 'Large (1000+)')], max_length=50)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlacementDrive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('internship', 'Internship'), ('part_time', 'Part Time'), ('contract', 'Contract')], max_length=50)),
                ('min_cgpa', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('min_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('eligible_batches', models.JSONField(default=list, help_text='List of eligible graduation years')),
                ('package_lpa', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('package_details', models.TextField(blank=True)),
                ('registration_start', models.DateTimeField()),
                ('registration_end', models.DateTimeField()),
                ('drive_date', models.DateTimeField()),
                ('result_date', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('drive_mode', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('hybrid', 'Hybrid')], default='offline', max_length=20)),
                ('application_link', models.URLField(default='https://example.com/apply', help_text='Link for students to apply for this placement drive')),
                ('required_documents', models.JSONField(default=list, help_text='List of required documents')),
                ('additional_info', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placement_drives', to='placements.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-drive_date'],
            },
        ),
        migrations.CreateModel(
            name='PlacementStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(help_text='e.g., 2024-2025', max_length=9)),
                ('batch_year', models.IntegerField(help_text='Graduation year')),
                ('branch', models.CharField(max_length=100)),
                ('total_students', models.IntegerField(default=0)),
                ('total_placed', models.IntegerField(default=0)),
                ('highest_package', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('average_package', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('median_package', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_companies_visited', models.IntegerField(default=0)),
                ('total_offers', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-batch_year', 'branch'],
                'unique_together': {('academic_year', 'batch_year', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='StudentCoordinator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(default='Placement Coordinator', max_length=100)),
                ('profile_picture', models.ImageField(help_text="Upload coordinator's profile picture", upload_to=placements.models.student_coordinator_image_upload_path)),
                ('mobile_number', models.CharField(help_text='Contact mobile number', max_length=15)),
                ('email', models.EmailField(help_text='Contact email address', max_length=254)),
                ('bio', models.TextField(blank=True, help_text='Brief bio or description')),
                ('is_active', models.BooleanField(default=True, help_text='Show in public listings')),
                ('display_order', models.IntegerField(default=0, help_text='Order for display (lower numbers appear first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_coordinator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Coordinator',
                'verbose_name_plural': 'Student Coordinators',
                'ordering': ['display_order', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='PlacementBrochure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Brochure title or description', max_length=200)),
                ('file', models.FileField(help_text='Upload placement brochure (PDF only). Maximum file size: 15MB.', upload_to=placements.models.placement_brochure_upload_path)),
                ('description', models.TextField(blank=True, help_text='Additional information about the brochure')),
                ('academic_year', models.CharField(help_text='e.g., 2024-2025', max_length=9)),
                ('is_current', models.BooleanField(default=True, help_text='Whether this is the current/active brochure')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('academic_year',)},
            },
        ),
        migrations.CreateModel(
            name='PlacementApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('shortlisted', 'Shortlisted'), ('selected', 'Selected'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='applied', max_length=20)),
                ('cover_letter', models.TextField(blank=True)),
                ('resume', models.FileField(blank=True, help_text='Upload resume (PDF only). Maximum file size: 15MB.', null=True, upload_to=placements.models.resume_upload_path)),
                ('additional_documents', models.JSONField(default=dict, help_text='Additional documents as JSON')),
                ('interview_date', models.DateTimeField(blank=True, null=True)),
                ('interview_mode', models.CharField(blank=True, choices=[('online', 'Online'), ('offline', 'Offline')], max_length=20)),
                ('interview_notes', models.TextField(blank=True)),
                ('result_status', models.CharField(choices=[('pending', 'Pending'), ('selected', 'Selected'), ('not_selected', 'Not Selected')], default='pending', max_length=20)),
                ('feedback', models.TextField(blank=True)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placement_applications', to=settings.AUTH_USER_MODEL)),
                ('drive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='placements.placementdrive')),
            ],
            options={
                'ordering': ['-applied_at'],
                'unique_together': {('drive', 'student')},
            },
        ),
        migrations.CreateModel(
            name='PlacedStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=200)),
                ('student_email', models.EmailField(max_length=254)),
                ('roll_number', models.CharField(max_length=50)),
                ('batch_year', models.IntegerField(help_text='Graduation year')),
                ('cgpa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('job_title', models.CharField(max_length=200)),
                ('package_lpa', models.DecimalField(decimal_places=2, max_digits=10)),
                ('package_details', models.TextField(blank=True, help_text='Additional package details')),
                ('work_location', models.CharField(blank=True, max_length=200)),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('internship', 'Internship'), ('contract', 'Contract')], default='full_time', max_length=50)),
                ('offer_date', models.DateField()),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('offer_letter', models.FileField(blank=True, help_text='Upload offer letter (PDF only). Maximum file size: 15MB.', null=True, upload_to='placement_offers/')),
                ('student_photo', models.ImageField(blank=True, null=True, upload_to='placed_students/')),
                ('testimonial', models.TextField(blank=True, help_text='Student testimonial about placement')),
                ('is_verified', models.BooleanField(default=False, help_text='Verified by placement coordinator')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placed_students', to='placements.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('placement_drive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='placements.placementdrive')),
            ],
            options={
                'ordering': ['-offer_date', '-package_lpa'],
                'unique_together': {('student_email', 'company', 'offer_date')},
            },
        ),
    ]
