# Generated by Django 5.1.4 on 2025-09-05 21:53 (Transaction-safe version)

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('academics', '0003_optimize_indexes'),
    ]

    operations = [
        # Transaction-safe PostgreSQL indexes (without CONCURRENTLY)
        migrations.RunSQL(
            sql=[
                # Regular B-tree indexes for production optimization
                "CREATE INDEX IF NOT EXISTS idx_academic_resource_subject_category ON academics_academicresource(subject_id, category);",
                "CREATE INDEX IF NOT EXISTS idx_academic_resource_approved_active ON academics_academicresource(is_approved, is_active);",
                "CREATE INDEX IF NOT EXISTS idx_subject_scheme_dept_sem ON academics_subject(scheme_id, department, semester);",
                
                # Performance optimization indexes
                "CREATE INDEX IF NOT EXISTS idx_academic_resource_download_count ON academics_academicresource(download_count DESC);",
                "CREATE INDEX IF NOT EXISTS idx_academic_resource_like_count ON academics_academicresource(like_count DESC);",
                "CREATE INDEX IF NOT EXISTS idx_subject_department ON academics_subject(department);",
            ],
            reverse_sql=[
                "DROP INDEX IF EXISTS idx_academic_resource_subject_category;",
                "DROP INDEX IF EXISTS idx_academic_resource_approved_active;",
                "DROP INDEX IF EXISTS idx_subject_scheme_dept_sem;",
                "DROP INDEX IF EXISTS idx_academic_resource_download_count;",
                "DROP INDEX IF EXISTS idx_academic_resource_like_count;",
                "DROP INDEX IF EXISTS idx_subject_department;",
            ]
        ),
    ]
