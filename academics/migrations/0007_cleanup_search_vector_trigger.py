# Generated by Django 5.1.4 on 2025-09-06

from django.db import migrations


def cleanup_postgresql_triggers(apps, schema_editor):
    """Clean up PostgreSQL-specific triggers and functions."""
    # Skip execution on non-PostgreSQL databases (e.g., SQLite dev)
    if schema_editor.connection.vendor != 'postgresql':
        return
    
    schema_editor.execute("DROP TRIGGER IF EXISTS update_academic_search_vector_trigger ON academics_academicresource;")
    schema_editor.execute("DROP FUNCTION IF EXISTS update_academic_search_vector();")


def reverse_cleanup(apps, schema_editor):
    """No reverse operation - we don't want to recreate broken triggers."""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('academics', '0006_remove_academicresource_academics_a_is_appr_0bc707_idx_and_more'),
    ]

    operations = [
        # Clean up PostgreSQL-specific triggers and functions (skipped on SQLite)
        migrations.RunPython(cleanup_postgresql_triggers, reverse_code=reverse_cleanup),
    ]
