# Generated by Django 5.1.4 on 2025-07-19 19:42

import academics.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('category_type', models.CharField(choices=[('notes', 'Notes'), ('textbook', 'Textbooks'), ('pyq', 'Previous Year Questions')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon class name', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Academic Categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AcademicResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(help_text='Upload only PDF files. Maximum file size: 15MB. Only PDF format is supported for academic resources.', upload_to=academics.models.academic_resource_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('module_number', models.PositiveIntegerField(choices=[(1, 'Module 1'), (2, 'Module 2'), (3, 'Module 3'), (4, 'Module 4'), (5, 'Module 5'), (0, 'General/Complete')], default=0, help_text='Module number for notes/textbooks')),
                ('exam_type', models.CharField(blank=True, choices=[('internal', 'Internal Exam'), ('sem', 'Semester Exam'), ('other', 'Other')], help_text='Exam type for PYQ', max_length=20)),
                ('exam_year', models.PositiveIntegerField(blank=True, help_text='Year of exam for PYQ', null=True)),
                ('author', models.CharField(blank=True, help_text='Author for textbooks', max_length=200)),
                ('publisher', models.CharField(blank=True, help_text='Publisher for textbooks', max_length=200)),
                ('edition', models.CharField(blank=True, help_text='Edition for textbooks', max_length=50)),
                ('isbn', models.CharField(blank=True, help_text='ISBN for textbooks', max_length=20)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(unique=True)),
                ('name', models.CharField(help_text="e.g., 'Scheme 2018', 'CBCS 2022'", max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20)),
                ('semester', models.PositiveIntegerField()),
                ('credits', models.PositiveIntegerField(default=3)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['scheme__year', 'semester', 'name'],
            },
        ),
    ]
